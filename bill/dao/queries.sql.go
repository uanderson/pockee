// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: queries.sql

package dao

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createBill = `-- name: CreateBill :exec
INSERT INTO bills (id, description, type, due_at, amount, status, category_id, contact_id, user_id)
VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
`

type CreateBillParams struct {
	ID          string
	Description string
	Type        string
	DueAt       pgtype.Date
	Amount      float64
	Status      string
	CategoryID  string
	ContactID   string
	UserID      string
}

func (q *Queries) CreateBill(ctx context.Context, arg CreateBillParams) error {
	_, err := q.db.Exec(ctx, createBill,
		arg.ID,
		arg.Description,
		arg.Type,
		arg.DueAt,
		arg.Amount,
		arg.Status,
		arg.CategoryID,
		arg.ContactID,
		arg.UserID,
	)
	return err
}

const createBoleto = `-- name: CreateBoleto :exec
INSERT INTO boletos (id, barcode, bill_id) VALUES ($1, $2, $3)
`

type CreateBoletoParams struct {
	ID      string
	Barcode string
	BillID  string
}

func (q *Queries) CreateBoleto(ctx context.Context, arg CreateBoletoParams) error {
	_, err := q.db.Exec(ctx, createBoleto, arg.ID, arg.Barcode, arg.BillID)
	return err
}

const createRecurringBill = `-- name: CreateRecurringBill :exec
INSERT INTO recurring_bills (id, description, type, start_at, end_at, amount, interval, contact_id, category_id, user_id)
VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10)
`

type CreateRecurringBillParams struct {
	ID          string
	Description string
	Type        string
	StartAt     pgtype.Date
	EndAt       pgtype.Date
	Amount      float64
	Interval    string
	ContactID   string
	CategoryID  string
	UserID      string
}

func (q *Queries) CreateRecurringBill(ctx context.Context, arg CreateRecurringBillParams) error {
	_, err := q.db.Exec(ctx, createRecurringBill,
		arg.ID,
		arg.Description,
		arg.Type,
		arg.StartAt,
		arg.EndAt,
		arg.Amount,
		arg.Interval,
		arg.ContactID,
		arg.CategoryID,
		arg.UserID,
	)
	return err
}
